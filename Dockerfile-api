
# Start from golang alpine
FROM golang:alpine AS builder

WORKDIR /go/src/github.com/sin-ivan/port-project/

COPY ./proto/ ./proto/

# Set the Current Working Directory inside the container
WORKDIR /go/src/github.com/sin-ivan/port-project/api-service/

# Copy everything from the current directory to the working directory inside the container
COPY /api-service/ .

RUN apk add --no-cache git

# # Download all the dependencies
RUN go get -d -v "google.golang.org/grpc"
RUN go get -d -v "github.com/golang/protobuf/proto"
RUN go get -d -v "gopkg.in/natefinch/lumberjack.v2"

# Install the package
RUN go install -v "gopkg.in/natefinch/lumberjack.v2"
RUN go install -v "google.golang.org/grpc"
RUN go install -v "github.com/golang/protobuf/proto"

# Build the Go app
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o /go/bin/api-service .

######## Start a new stage from scratch #######
FROM alpine:latest  

RUN apk --no-cache add ca-certificates

WORKDIR /root/

# Copy the Pre-built binary file from the previous stage
COPY --from=builder /go/bin/api-service .
COPY --from=builder /go/src/github.com/sin-ivan/port-project/api-service/resources/ports.json /root/resources/

EXPOSE 8080

CMD ["./api-service"] 